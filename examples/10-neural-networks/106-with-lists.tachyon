// this program runs a layered classification network that identifies whether a fruit is poisonous
// by relating this value to two properties of the fruit: the size of its spots and the length of
// its spikes.
//
// this is the same as 105-network-with-gradient-descent.tachyon, but with lists instead of
// hardcoded weight/bias values.

// some weights and biases to start with
weights = [1, 1, 1, 1, 1]
biases  = [1, 1, 1, 1, 1]
layers  = [1, 1, 1, 1, 1;
           2, 2, 2, 2, 2]

print(weights)
print(biases)
print(layers)

cost = fn (weights, biases, layers) {
  total_cost = 0;
  x = 0;
  y = 0;

  activationFunction = fn(x) { return 1 / (1 + 2.718 ^ (0-x) ); }

  while (y < 50) {
    while (x < 50) {
      print(x)
      print(" ")
      x = x + 1
    }
    x = 0
    y = y + 1
    print("\n")
  }

  return 0
}

cost(weights, biases)

return 0