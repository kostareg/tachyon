/*
 * Implements some basic Maclaurin Taylor approximations for common mathematical
 * functions.
 *
 * Sin(x) and cos(x) are approximated up to n=2.
 */

// sin(x): @sum from n=0 to 2 of ((-1)^n)(x^(2n+1))/(2n+1)!
// cos(x): @sum from n=0 to 2 of ((-1)^n)(x^2n)/2n!
sin = fn(x) { return x - (x * x * x) / 6 + (x * x * x * x * x) / 120; }
cos = fn(x) { return 1 -     (x * x) / 2 +     (x * x * x * x) /  24;  }

print(sin(1))
print("\n")
print(cos(1))

return 0
