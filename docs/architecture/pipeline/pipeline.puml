@startuml
top to bottom direction
hide empty description

[*] --> CompilationPipeline : source text

state "Compilation Pipeline" as CompilationPipeline {
  state Lexer
  state Parser
  state "Bytecode Generator" as Bytecodegen

  [*] -> Lexer

  Lexer -> Parser : list of tokens

  Parser -> Bytecodegen : abstract syntax tree
}
CompilationPipeline --> RuntimePipeline

state "Runtime Pipeline" as RuntimePipeline {
  state "Tachyon Virtual Machine"  as VM
  state "Intermediate Representation Generator" as IRGenerator
  state "Intermediate Representation Optimizer" as IROptimizer
  state "Machine Code Generator" as MCGenerator

  note right of VM : interprets bytecode or executes machine code.\nalso marks functions for JIT compilation,\nwhich it sends to the IR generator
  note bottom of IRGenerator : generates an intermediate representation of bytecode
  note bottom of IROptimizer : applies various optimizations
  note bottom of MCGenerator : generates x86_64 machine code

  [*] -right-> VM
  VM -down-> IRGenerator : bytecode (in need of optimization)
  IRGenerator -right-> IROptimizer : intermediate representation
  IROptimizer -right-> MCGenerator : optimized intermediate representation
  MCGenerator -up-> VM : machine code
}
RuntimePipeline --> [*] : exit

@enduml